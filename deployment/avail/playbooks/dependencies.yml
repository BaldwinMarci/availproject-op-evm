- hosts: all
  gather_facts: true
  become: true
  become_user: admin
  environment:
    PATH: "{{ ansible_env.HOME }}/.cargo/bin:{{ ansible_env.PATH }}"
  pre_tasks:
    - name: Update system (apt) repositories
      apt: update_cache=yes
      become_user: root
      changed_when: false
  tasks:
  - name: Add docker signing key
    apt_key:
      url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
      state: present
    become_user: root

  - name: Add docker repository into sources list
    apt_repository:
      repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
      state: present
      filename: docker
    become_user: root

  - name: Installing dependencies using apt
    apt:
      name:
        - build-essential
        - apt-transport-https
        - ca-certificates
        - lsb-release
        - gnupg
        - git
        - protobuf-compiler
        - libclang-dev
        - docker
        - docker.io
        - docker-compose
        - docker-registry
      state: latest
      update_cache: true
    become_user: root

  - name: Check if cargo is installed
    shell: command -v cargo
    register: cargo_exists
    ignore_errors: true

  - name: Download rust/cargo installer
    when: cargo_exists is failed
    get_url:
      url: https://sh.rustup.rs
      dest: /tmp/sh.rustup.rs
      mode: '0755'
      force: 'yes'
    tags:
      - rust

  - name: Install rust/cargo
    when: cargo_exists is failed
    shell: /tmp/sh.rustup.rs -y
    tags:
      - rust
